{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.math.trunc.js","webpack:///./src/components/View/CountdownTimer.vue?2154","webpack:///src/components/View/CountdownTimer.vue","webpack:///./src/components/View/CountdownTimer.vue?2138","webpack:///./src/components/View/CountdownTimer.vue"],"names":["$","ceil","Math","floor","target","stat","trunc","it","render","_vm","this","_h","$createElement","_c","_self","_v","_s","hoursLeft","minutesLeft","secondsLeft","staticRenderFns","name","created","timer","setInterval","props","data","timeLimitLeft","timeLimit","watch","immediate","handler","countHoursLeft","timeLeft","countMinutesLeft","countSecondsLeft","$emit","clearInterval","methods","hours","minutes","seconds","beforeDestroy","component"],"mappings":"mGAAA,IAAIA,EAAI,EAAQ,QAEZC,EAAOC,KAAKD,KACZE,EAAQD,KAAKC,MAIjBH,EAAE,CAAEI,OAAQ,OAAQC,MAAM,GAAQ,CAChCC,MAAO,SAAeC,GACpB,OAAQA,EAAK,EAAIJ,EAAQF,GAAMM,O,yCCTnC,IAAIC,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,SAAS,CAAC,CAACJ,EAAIM,GAAGN,EAAIO,GAAGP,EAAIQ,aAAaR,EAAIM,GAAG,KAAK,CAACN,EAAIM,GAAGN,EAAIO,GAAGP,EAAIS,eAAeT,EAAIM,GAAG,KAAK,CAACN,EAAIM,GAAGN,EAAIO,GAAGP,EAAIU,gBAAgB,IACtOC,EAAkB,GCQtB,G,UAAA,CACEC,KAAM,iBACNC,QAFF,WAEA,WACIZ,KAAKa,MAAQC,aAAY,WAA7B,oCAEEC,MAAO,CAAC,aACRC,KANF,WAOI,MAAO,CACLC,cAAejB,KAAKkB,UACpBX,UAAW,GACXC,YAAa,GACbC,YAAa,GACbI,MAAO,OAGXM,MAAO,CACLF,cAAe,CACbG,WAAW,EACXC,QAAS,SAAf,GAIQ,GAHArB,KAAKO,UAAYP,KAAKsB,eAAeC,GACrCvB,KAAKQ,YAAcR,KAAKwB,iBAAiBD,EAAW,MACpDvB,KAAKS,YAAcT,KAAKyB,iBAAiBF,EAAW,KAChDA,GAAY,EAEd,OADAvB,KAAK0B,MAAM,UACJC,cAAc3B,KAAKa,UAKlCe,QAAS,CACPN,eADJ,SACA,GACM,IAAN,qBACM,OAAOO,EAAQ,EAAIA,EAAQ,IAAMA,GAEnCL,iBALJ,SAKA,GACM,IAAN,oBACM,OAAOM,EAAU,EAAIA,EAAU,IAAMA,GAEvCL,iBATJ,SASA,GACM,IAAN,oBACM,OAAOM,EAAU,EAAIA,EAAU,IAAMA,IAGzCC,cA3CF,WA4CIL,cAAc3B,KAAKa,UCrDgV,I,YCOnWoB,EAAY,eACd,EACAnC,EACAY,GACA,EACA,KACA,KACA,MAIa,aAAAuB,E","file":"js/chunk-0f113697.23fab18a.js","sourcesContent":["var $ = require('../internals/export');\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.github.io/ecma262/#sec-math.trunc\n$({ target: 'Math', stat: true }, {\n  trunc: function trunc(it) {\n    return (it > 0 ? floor : ceil)(it);\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('strong',[[_vm._v(_vm._s(_vm.hoursLeft))],_vm._v(\":\"),[_vm._v(_vm._s(_vm.minutesLeft))],_vm._v(\":\"),[_vm._v(_vm._s(_vm.secondsLeft))]],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <strong>\r\n    <template>{{ hoursLeft }}</template\r\n    >:<template>{{ minutesLeft }}</template\r\n    >:<template>{{ secondsLeft }}</template>\r\n  </strong>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"CountdownTimer\",\r\n  created() {\r\n    this.timer = setInterval(() => (this.timeLimitLeft -= 1000), 1000);\r\n  },\r\n  props: [\"timeLimit\"],\r\n  data() {\r\n    return {\r\n      timeLimitLeft: this.timeLimit,\r\n      hoursLeft: \"\",\r\n      minutesLeft: \"\",\r\n      secondsLeft: \"\",\r\n      timer: null\r\n    };\r\n  },\r\n  watch: {\r\n    timeLimitLeft: {\r\n      immediate: true,\r\n      handler: function(timeLeft) {\r\n        this.hoursLeft = this.countHoursLeft(timeLeft);\r\n        this.minutesLeft = this.countMinutesLeft(timeLeft % 3600000);\r\n        this.secondsLeft = this.countSecondsLeft(timeLeft % 60000);\r\n        if (timeLeft <= 0) {\r\n          this.$emit(\"timeUp\");\r\n          return clearInterval(this.timer);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    countHoursLeft(timeLeft) {\r\n      const hours = Math.trunc(timeLeft / 3600000);\r\n      return hours > 9 ? hours : \"0\" + hours;\r\n    },\r\n    countMinutesLeft(timeLeft) {\r\n      const minutes = Math.trunc(timeLeft / 60000);\r\n      return minutes > 9 ? minutes : \"0\" + minutes;\r\n    },\r\n    countSecondsLeft(timeLeft) {\r\n      const seconds = Math.trunc(timeLeft / 1000);\r\n      return seconds > 9 ? seconds : \"0\" + seconds;\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.timer);\r\n  }\r\n};\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CountdownTimer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CountdownTimer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CountdownTimer.vue?vue&type=template&id=cc578a8e&\"\nimport script from \"./CountdownTimer.vue?vue&type=script&lang=js&\"\nexport * from \"./CountdownTimer.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}